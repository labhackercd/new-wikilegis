@mixin underline($offset: 0, $width: 1px) {
  background: linear-gradient(currentcolor, currentcolor);
  background-repeat: repeat-x;
  background-position: 100% calc(100% - #{$offset});
  background-size: $width $width;
}

@mixin hidden-shadow {
  transition: box-shadow .3s $swift-out;

  box-shadow: 0 0 0 rgba(0, 0, 0, 0);
}

@mixin card-shadow {
  transition: box-shadow .3s $swift-out;

  box-shadow: 3px 3px 4px rgba(0, 0, 0, .08);
}

@mixin card-darkbg-shadow {
  box-shadow: 2px 2px 3px 2px rgba(0, 0, 0, .2);
}

@mixin button-shadow {
  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, .2);
}

@mixin circle-button-shadow {
  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, .2), 0 0 0 -1px currentColor;
}

@mixin circle-button-shadow-rippled {
  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, .2), 0 0 0 4rem transparent;
}


@mixin header-shadow {
  transition: box-shadow .3s $swift-out;

  box-shadow: 0 3px 4px rgba(0, 0, 0, .08);
}

@mixin footer-shadow {
  transition: box-shadow .3s $swift-out;

  box-shadow: 0 -3px 4px rgba(0, 0, 0, .08);
}

// Mixin to add icons by using SASS variables. No markup shit.
@mixin icon($icon, $background-size: 100%, $width:1em, $height:1em, $margin:0) {
  &::before {
    display: inline-flex;

    width: $width;
    min-width: $width;
    height: $height;
    min-height: $height;
    margin: $margin;

    content: '';

    background-image: url('../../static/img/#{$icon}.svg');
    background-repeat: no-repeat;
    background-position: center center;
    background-size: $background-size $background-size;
  }
}

// Floating label for elements with content based of aria-label attributes. Available on :hover
@mixin hovering-label($direction, $margin: .5em, $width: auto, $color:inherit, $precedence: after, $button-position:relative) {
  position: $button-position;

  @include bp-mediumup {
    &:hover::after {
      transform: translate(0) !important;
      pointer-events: auto;

      opacity: 1;
    }
  }

  &::#{$precedence} {
    font-size: $font-size;
    font-weight: 600;

    position: absolute;

    width: $width;
    padding: .5em;

    content: attr(aria-label);
    transition: transform .3s $swift-out, opacity .3s $swift-out;
    white-space: nowrap;
    text-transform: uppercase;
    pointer-events: none;

    opacity: 0;
    color: $color;

    @if $width != 'auto' {
      white-space: pre-wrap;
    }

    @if $direction == 'right' {
      left: 100%;

      padding-left: $margin;

      transform: translate(1em, 0);
    } @else if $direction == 'left' {
      right: 100%;

      padding-right: $margin;

      transform: translate(-1em, 0);
    } @else if $direction == 'top' {
      bottom: 100%;

      padding-bottom: $margin;

      transform: translate(0, 1em);
    } @else if $direction == 'bottom' {
      top: 100%;

      padding-top: $margin;

      transform: translate(0, 1em);
    }
  }
}
