@mixin underline($offset: 0, $width: 1px) {
  background: linear-gradient(currentcolor, currentcolor);
  background-repeat: repeat-x;
  background-position: 100% calc(100% - #{$offset});
  background-size: $width $width;
}

@mixin hidden-shadow {
  transition: box-shadow .3s $swift-out;

  box-shadow: 0 0 0 rgba(0, 0, 0, 0);
}

@mixin card-shadow($transition: true) {
  box-shadow: 3px 3px 4px rgba(0, 0, 0, .08);

  @if $transition == true {
    transition: box-shadow .3s $swift-out;
  }
}

@mixin card-darkbg-shadow {
  box-shadow: 2px 2px 3px 2px rgba(0, 0, 0, .2);
}

@mixin button-shadow {
  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, .2);
}

@mixin circle-button-shadow {
  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, .2), 0 0 0 -1px currentColor;
}

@mixin circle-button-shadow-rippled {
  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, .2), 0 0 0 4rem transparent;
}


@mixin header-shadow {
  transition: box-shadow .3s $swift-out;

  box-shadow: 0 3px 4px rgba(0, 0, 0, .08);
}

@mixin footer-shadow {
  transition: box-shadow .3s $swift-out;

  box-shadow: 0 -3px 4px rgba(0, 0, 0, .08);
}

@mixin link-style($font-weight: inherit, $negative: false) {
  font-weight: $font-weight;

  cursor: pointer;
  transition: all .25s $swift-out;
  text-decoration: none;

  background-repeat: no-repeat;
  background-size: 100% 100%;

  @include bp-mediumup {
    background-size: 0 100%;
    &:hover {
      background-size: 100% 100%;
    }
  }

  @if $negative == true {
    color: #FFF;
    background-image: linear-gradient(180deg,transparent 65%,rgba(#FFF, .3) 0);
  } @else {
    color: $color-brand;
    background-image: linear-gradient(180deg,transparent 65%,rgba($color-brand, .3) 0);
  }
}

// Mixin to add icons by using SASS variables. No markup shit.
@mixin icon($icon, $width: 1em, $height:1em, $background-size: 100%, $margin:0) {
  &::before {
    display: inline-flex;

    width: $width;
    min-width: $width;
    height: $height;
    min-height: $height;
    margin: $margin;

    content: '';

    background-image: url('../../static/img/#{$icon}.svg');
    background-repeat: no-repeat;
    background-position: center center;
    background-size: $background-size $background-size;
  }
}

@mixin mask-icon($icon, $color: #FFF, $width: 1em, $height:1em, $mask-size: 100%, $margin:0) {

  &::before {
    display: inline-flex;

    width: $width;
    min-width: $width;
    height: $height;
    min-height: $height;
    margin: $margin;

    content: '';

    color: $color;

    mask-image: url('../../static/img/#{$icon}.svg');
    mask-mode: alpha;
    mask-repeat: no-repeat;
    mask-position: center center;
    mask-size: $mask-size $mask-size;
  }
}

// Floating label for elements with content based of aria-label attributes. Available on :hover
@mixin hovering-label($direction, $margin: .5em, $color:inherit, $font-size: 1em, $width: auto, $precedence: after, $button-position:relative) {
  position: $button-position;

  @include bp-mediumup {
    &:hover::after {
      pointer-events: auto;

      opacity: 1;
      @if $direction == 'right' or $direction == 'left' {
        transform: translate(0, -50%);
      } @else if $direction == 'top' or $direction == 'bottom' {
        transform: translate(-50%, 0);
      }
    }
  }

  &::#{$precedence} {
    font-size: $font-size;
    font-weight: 600;
    line-height: 1;

    position: absolute;

    width: $width;
    padding: .5em;

    content: attr(aria-label);
    transition: transform .3s $swift-out, opacity .3s $swift-out;
    white-space: nowrap;
    text-transform: uppercase;
    pointer-events: none;

    opacity: 0;
    color: $color;

    @if $width != 'auto' {
      white-space: pre-wrap;
    }

    @if $direction == 'right' {
      top: 50%;
      left: 100%;

      padding-left: $margin;

      transform: translate(1em, -50%);
    } @else if $direction == 'left' {
      top: 50%;
      right: 100%;

      padding-right: $margin;

      transform: translate(-1em, -50%);
    } @else if $direction == 'top' {
      bottom: 100%;
      left: 50%;

      padding-bottom: $margin;

      transform: translate(-50%, 1em);
    } @else if $direction == 'bottom' {
      top: 100%;
      left: 50%;

      padding-top: $margin;

      transform: translate(-50%, 1em);
    }
  }
}
